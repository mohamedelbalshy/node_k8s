apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"

  labels:
    app: node
  name: node
  namespace: default

spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: node
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: node
    spec:
      containers:
        - image: mohamedbalshy/nodedocker:0.0.3.RELEASE
          imagePullPolicy: Always
          name: nodedocker
          env:
            - name: PORT
              value: "3000"
            - name: ME_CONFIG_MONGODB_URL
              value: mongodb://root:example@mongo:27017/
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: node
  name: node
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 32187
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: node
  sessionAffinity: None
  type: LoadBalancer
